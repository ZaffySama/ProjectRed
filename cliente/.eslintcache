[{"A:\\prj-red\\cliente\\src\\index.js":"1","A:\\prj-red\\cliente\\src\\App.js":"2","A:\\prj-red\\cliente\\src\\paginas\\Registro.js":"3","A:\\prj-red\\cliente\\src\\ApolloProvider.js":"4","A:\\prj-red\\cliente\\src\\paginas\\Login.js":"5","A:\\prj-red\\cliente\\src\\context\\auth.js":"6","A:\\prj-red\\cliente\\src\\util\\RutaDinamica.js":"7","A:\\prj-red\\cliente\\src\\paginas\\Inicio\\Inicio.js":"8","A:\\prj-red\\cliente\\src\\paginas\\Inicio\\Users.js":"9","A:\\prj-red\\cliente\\src\\context\\mensajes.js":"10","A:\\prj-red\\cliente\\src\\paginas\\Inicio\\Mensajes.js":"11","A:\\prj-red\\cliente\\src\\paginas\\Inicio\\Message.js":"12"},{"size":200,"mtime":1607980553048,"results":"13","hashOfConfig":"14"},{"size":1237,"mtime":1608060307261,"results":"15","hashOfConfig":"14"},{"size":3709,"mtime":1608032585242,"results":"16","hashOfConfig":"14"},{"size":1687,"mtime":1608080403801,"results":"17","hashOfConfig":"14"},{"size":2994,"mtime":1608081685550,"results":"18","hashOfConfig":"14"},{"size":1689,"mtime":1608060210014,"results":"19","hashOfConfig":"14"},{"size":689,"mtime":1608044715768,"results":"20","hashOfConfig":"14"},{"size":2255,"mtime":1608081323218,"results":"21","hashOfConfig":"14"},{"size":1994,"mtime":1608077353737,"results":"22","hashOfConfig":"14"},{"size":2359,"mtime":1608085546065,"results":"23","hashOfConfig":"14"},{"size":3822,"mtime":1608080814331,"results":"24","hashOfConfig":"14"},{"size":1390,"mtime":1608068415849,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1klp0w2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"A:\\prj-red\\cliente\\src\\index.js",[],["55","56"],"A:\\prj-red\\cliente\\src\\App.js",["57"],"import React, {useState} from \"react\"\nimport {Container} from \"react-bootstrap\"\nimport {BrowserRouter, Switch} from \"react-router-dom\";\nimport './App.scss';\nimport Inicio from \"./paginas/Inicio/Inicio\";\nimport Registro from \"./paginas/Registro\";\nimport Login from \"./paginas/Login\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport {ProveedorAuth} from './context/auth'\nimport {ProveedorMensajes} from './context/mensajes'\nimport RutaDinamica from \"./util/RutaDinamica\";\n\n\nfunction App() {\n    return (\n        <ApolloProvider>\n            <ProveedorAuth>\n                <ProveedorMensajes>\n                    <BrowserRouter>\n                        <Container className=\"pt-5\">\n                            <Switch>\n                                <RutaDinamica exact path=\"/\" component={Inicio} authenticated/>\n                                <RutaDinamica path=\"/registro\" component={Registro} invitado/>\n                                <RutaDinamica path=\"/login\" component={Login} invitado/>\n                            </Switch>\n                        </Container>\n                    </BrowserRouter>\n                </ProveedorMensajes>\n            </ProveedorAuth>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n","A:\\prj-red\\cliente\\src\\paginas\\Registro.js",[],"A:\\prj-red\\cliente\\src\\ApolloProvider.js",[],"A:\\prj-red\\cliente\\src\\paginas\\Login.js",[],"A:\\prj-red\\cliente\\src\\context\\auth.js",[],"A:\\prj-red\\cliente\\src\\util\\RutaDinamica.js",[],"A:\\prj-red\\cliente\\src\\paginas\\Inicio\\Inicio.js",["58"],"import React, {Fragment, useEffect} from 'react'\r\nimport {Button, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useAuthDispatch, useAuthState} from \"../../context/auth\";\r\nimport {useMensajesDispatch} from \"../../context/mensajes\";\r\nimport {gql, useSubscription} from \"@apollo/client\";\r\nimport Users from \"./Users\";\r\nimport Mensajes from \"./Mensajes\";\r\n\r\nconst NEW_MESSAGE = gql`\r\n    subscription newMensaje{\r\n        newMensaje{\r\n            uuid from to content createdAt\r\n        }\r\n    }\r\n`\r\n\r\n\r\nexport default function Inicio({history}) {\r\n    const authDispatch = useAuthDispatch()\r\n    const messageDispatch = useMensajesDispatch()\r\n    const {user} = useAuthState()\r\n\r\n    //Hook para recibir los mensajes por websocket\r\n    const {data: messageData, error: messageError} = useSubscription(NEW_MESSAGE)\r\n    useEffect(() => {\r\n        if (messageError) console.log(messageError)\r\n        if (messageData) {\r\n            const message = messageData.newMensaje\r\n            const otherUser = user.username === message.to ? message.from : message.to\r\n\r\n            messageDispatch(\r\n                {\r\n                    type: 'ADD_MESSAGE', payload:\r\n                        {\r\n                            username: otherUser,\r\n                            message,\r\n                        }\r\n                })\r\n        }\r\n\r\n    }, [messageError, messageData])\r\n\r\n    const logout = () => {\r\n        authDispatch({type: 'LOGOUT'})\r\n        window.location.href = '/login'\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Row className=\"bg-white justify-content-around\">\r\n                <Link to=\"/login\">\r\n                    <Button variant=\"link\">\r\n                        Login\r\n                    </Button>\r\n                </Link>\r\n\r\n                <Link to=\"/registro\">\r\n                    <Button variant=\"link\">\r\n                        Registro\r\n                    </Button>\r\n                </Link>\r\n\r\n                <Button variant=\"link\" onClick={logout}>\r\n                    Cerrar Sesion\r\n                </Button>\r\n            </Row>\r\n            <Row className=\"bg-white\">\r\n                <Users/>\r\n                <Mensajes/>\r\n            </Row>\r\n\r\n        </Fragment>\r\n\r\n\r\n    )\r\n}\r\n","A:\\prj-red\\cliente\\src\\paginas\\Inicio\\Users.js",[],"A:\\prj-red\\cliente\\src\\context\\mensajes.js",[],"A:\\prj-red\\cliente\\src\\paginas\\Inicio\\Mensajes.js",["59","60"],"import React, {Fragment, useEffect, useState} from \"react\"\r\nimport {gql, useLazyQuery, useMutation} from \"@apollo/client\";\r\nimport {Col, Form} from 'react-bootstrap'\r\nimport {useMensajesDispatch, useMensajesState} from \"../../context/mensajes\"\r\nimport Message from \"./Message\";\r\n\r\nconst SEND_MESSAGE = gql`\r\nmutation createMessage($to: String!, $content: String!){\r\n    createMessage(to: $to, content: $content){\r\n        uuid from to content createdAt\r\n    }\r\n}\r\n`\r\nconst GET_MESSAGE = gql`\r\n    query getMessages($from: String!) {getMessages(from: $from) {\r\n        uuid from to content createdAt\r\n    }}\r\n`\r\n\r\nexport default function Mensajes() {\r\n\r\n    const {users} = useMensajesState()\r\n    const dispatch = useMensajesDispatch()\r\n    const [content, setContent] = useState('');\r\n    const selectedUser = users?.find((u) => u.selected === true)\r\n    const messages = selectedUser?.messages\r\n\r\n    const [getMessages, {loading: messagesLoading, data: messagesData},] = useLazyQuery(GET_MESSAGE)\r\n    const [createMessage] = useMutation(SEND_MESSAGE, {\r\n        onError: (err) => console.log(err),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (selectedUser && !selectedUser.messages) {\r\n            getMessages({ variables: { from: selectedUser.username } })\r\n        }\r\n    }, [selectedUser])\r\n\r\n    useEffect(() => {\r\n        if (messagesData) {\r\n            dispatch(\r\n                {\r\n                    type: 'SET_USER_MESSAGES',\r\n                    payload: {\r\n                        username: selectedUser.username,\r\n                        messages: messagesData.getMessages\r\n                    }\r\n                })\r\n        }\r\n    }, [messagesData])\r\n\r\n    const submitMessage = (e) => {\r\n        e.preventDefault()\r\n        if (content.trim() === '' || !selectedUser) return\r\n        setContent('')\r\n        // Mutacion para mandar los mensajes.\r\n        createMessage({ variables: { to: selectedUser.username, content } })\r\n    }\r\n\r\n    let selectedChatMarkup\r\n    if (!messages && !messagesLoading) {\r\n        selectedChatMarkup =\r\n            <p className=\"informacion\">\r\n                Â¡Abre un chat!\r\n            </p>\r\n    } else if (messagesLoading) {\r\n        selectedChatMarkup =\r\n            <p className=\"informacion\">\r\n                Cargando..\r\n            </p>\r\n    } else if (messages.length > 0) {\r\n        selectedChatMarkup = messages.map((message, index) => (\r\n            <Fragment>\r\n                <Message key={message.uuid} message={message}/>\r\n                {index === messages.length - 1 && (\r\n                    <div className=\"invisible\">\r\n                        <hr className=\"m-0\"/>\r\n                    </div>\r\n                )}\r\n            </Fragment>\r\n        ))\r\n    } else if (messages.length === 0) {\r\n        selectedChatMarkup =\r\n            <p className=\"informacion\">\r\n                Atrevete y manda el primer mensaje\r\n            </p>\r\n    }\r\n\r\n    return (\r\n        <Col xs={10} md={8} >\r\n            <div className=\"caja-mensajes d-flex flex-column-reverse\">\r\n                {selectedChatMarkup}\r\n            </div>\r\n            <div>\r\n                <Form onSubmit={submitMessage} >\r\n                    <Form.Group className=\"d-flex align-items-center\">\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"input-mensaje p-4 rounded-pill bg-primary border-10\"\r\n                            placeholder=\"Escribe tu mensaje\"\r\n                            value={content}\r\n                            onChange={e => setContent(e.target.value)}/>\r\n                        <i className=\"fab fa-galactic-senate fa-3x text-primary ml-4\" onClick={submitMessage} role=\"button\"/>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n\r\n        </Col>\r\n    )\r\n}\r\n","A:\\prj-red\\cliente\\src\\paginas\\Inicio\\Message.js",[],["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":42,"column":8,"nodeType":"73","endLine":42,"endColumn":35,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":37,"column":8,"nodeType":"73","endLine":37,"endColumn":22,"suggestions":"76"},{"ruleId":"71","severity":1,"message":"77","line":50,"column":8,"nodeType":"73","endLine":50,"endColumn":22,"suggestions":"78"},{"ruleId":"63","replacedBy":"79"},{"ruleId":"65","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'messageDispatch' and 'user.username'. Either include them or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.",["84"],"React Hook useEffect has missing dependencies: 'dispatch' and 'selectedUser.username'. Either include them or remove the dependency array.",["85"],["81"],["82"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [messageError, messageData, user.username, messageDispatch]",{"range":"92","text":"93"},"Update the dependencies array to be: [getMessages, selectedUser]",{"range":"94","text":"95"},"Update the dependencies array to be: [dispatch, messagesData, selectedUser.username]",{"range":"96","text":"97"},[1372,1399],"[messageError, messageData, user.username, messageDispatch]",[1282,1296],"[getMessages, selectedUser]",[1654,1668],"[dispatch, messagesData, selectedUser.username]"]